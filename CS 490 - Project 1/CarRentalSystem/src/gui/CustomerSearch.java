/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import business_logic.Controller;
import java.awt.Dialog;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wjfkc2
 */
public class CustomerSearch extends javax.swing.JFrame {
    private Controller controller;
    
    /**
     * Creates new form CustomerSearch
     */
    public CustomerSearch(Controller controller) {
        this.controller = controller;
        initComponents();
    }
    
    private void createMsgBox(String msg){
        JFrame window = new JFrame();
            Dialog modal = new Dialog(window, "Alert", true);
            
            BoxLayout boxLayout = new BoxLayout(modal, BoxLayout.Y_AXIS);
            
            modal.setLayout(boxLayout);
            JButton ok = new JButton("OK");
            ok.addActionListener(new ActionListener(){
                public void actionPerformed(ActionEvent evt){
                    modal.setVisible(false);
                }
            });
            
            JPanel msgFlow = new JPanel();
            msgFlow.setLayout(new FlowLayout(FlowLayout.CENTER, 20,15));
            msgFlow.add(new JLabel(msg));
            
            JPanel btnFlow = new JPanel();
            btnFlow.setLayout(new FlowLayout(FlowLayout.CENTER, 20,15));
            btnFlow.add(ok);
            
            modal.add(msgFlow);
            modal.add(btnFlow);
            
            modal.pack();
            modal.setLocationRelativeTo(null);
            modal.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultsPane = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        searchBox = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        rentCarButton = new javax.swing.JButton();
        rentedCarsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Telephone", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        resultsPane.setViewportView(customerTable);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        rentCarButton.setText("Rent Car");
        rentCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentCarButtonActionPerformed(evt);
            }
        });

        rentedCarsButton.setText("Rented Cars");
        rentedCarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentedCarsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPane, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(searchButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rentCarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rentedCarsButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rentCarButton)
                    .addComponent(rentedCarsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(resultsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        DefaultTableModel custModel = (DefaultTableModel) customerTable.getModel();
        custModel.setNumRows(0);
        LinkedList<String[]> customers = controller.searchCustomers(searchBox.getText());
        for(String[] customer:customers){
            custModel.addRow(customer);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void rentCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentCarButtonActionPerformed
        int row = customerTable.getSelectedRow();
        // Ensure the user selects a customer from the table.
        if(row == -1){
            createMsgBox("No Customer Selected");
            return;
        }
        
        String name = (String)customerTable.getValueAt(row, 0);
        RentalInfo rentalFrame = new RentalInfo(name, 0);
        rentalFrame.setVisible(true);
    }//GEN-LAST:event_rentCarButtonActionPerformed

    private void rentedCarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentedCarsButtonActionPerformed
        int row = customerTable.getSelectedRow();
        // Ensure the user selects a customer from the table.
        if(row == -1){
            createMsgBox("No Customer Selected");
            return;
        }
        
        String name = (String)customerTable.getValueAt(row, 0);
        RentalInfo rentalFrame = new RentalInfo(name, 1);
        rentalFrame.setVisible(true);
    }//GEN-LAST:event_rentedCarsButtonActionPerformed
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable customerTable;
    private javax.swing.JButton rentCarButton;
    private javax.swing.JButton rentedCarsButton;
    private javax.swing.JScrollPane resultsPane;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
